package com.litchi.iguardian;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.ResponseHandler;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.BasicResponseHandler;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONArray;
import org.json.JSONObject;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.ProgressDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

public class LoginActivity extends Activity {
	Button b;
	EditText et, pass;
	TextView tv;
	HttpPost httppost;
	StringBuffer buffer;
	HttpResponse response;
	HttpClient httpclient;
	List<NameValuePair> nameValuePairs;
	ProgressDialog dialog = null;
	String[] schoolName;
	Spinner spinner1;
	// ProgressDialog ringProgressDialog = null;
	public String schoolSelected;
	String result = "";
	InputStream isr = null;
	final List<String> list1 = new ArrayList<String>();
	SessionManagement session;
	private UserDataSource datasource;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.parent_login);
		
		datasource = new UserDataSource(this);
	    datasource.open();
		

		b = (Button) findViewById(R.id.Button01);
		et = (EditText) findViewById(R.id.username);
		pass = (EditText) findViewById(R.id.password);
		spinner1 = (Spinner) findViewById(R.id.spinner1);
		// tv = (TextView) findViewById(R.id.status);

		session = new SessionManagement(getApplicationContext());

		new dataget().execute();
		
		//List<String> user_name = datasource.get_user_name();
		int check =0 ;
		// getData();

		b.setOnClickListener(new OnClickListener() {
			int check =0 ;
			List<String> user_name = datasource.get_user_name();
			@Override
			public void onClick(View v) {
				 check =0;
				if (et.getText().toString().trim().length() == 0) {
					userAlert();
					check = 1;

				} else if (pass.getText().toString().trim().length() == 0) {
					passAlert();
					check=1;
				}
				if(check==0)
				{
					for(int i=0 ; i< user_name.size(); i++)
					{
						if(et.getText().toString().trim().equals(user_name.get(i)))
						{
							user_same_alert();
						}
						
					}
				}
				else if(check==0) {
					
					dialog = ProgressDialog.show(LoginActivity.this, "",
							"Please Wait..", true);
					new Thread(new Runnable() {
						public void run() {
							login();
						}
					}).start();

				}
			}
		}); // b.setOnClickListener terminated
	} // on create terminated

	void login() {
		try { /*
			 * dialog = ProgressDialog.show(LoginActivity.this, "",
			 * "Validating user...", true);
			 */

			httpclient = new DefaultHttpClient();
			httppost = new HttpPost(
					"http://npaneer.iguardianerp.co.in/login.php");

			nameValuePairs = new ArrayList<NameValuePair>(3);
			// tv.setText("vhpppi");

			nameValuePairs.add(new BasicNameValuePair("username", et.getText()
					.toString().trim())); // $Edittext_value =
											// $_POST['Edittext_value'];
			nameValuePairs.add(new BasicNameValuePair("password", pass
					.getText().toString().trim()));
			// tv.setText("vhiccc");
			nameValuePairs.add(new BasicNameValuePair("schoolSelected",
					schoolSelected.trim()));
			// tv.setText("vhisjdskdj");
			httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
			// Execute HTTP Post Request
			response = httpclient.execute(httppost);

			ResponseHandler<String> responseHandler = new BasicResponseHandler();
			final String response = httpclient.execute(httppost,
					responseHandler);
			System.out.println("Response : " + response);
			// tv.setText(response);
			runOnUiThread(new Runnable() {
				public void run() {
					// tv.setText("Response from PHP : " + response);
					dialog.dismiss();
				}
			}); // run on ui thread terminated

			// dialog.dismiss();

			if (response.equalsIgnoreCase("User Found")) {
				// tv.setText("vhsjdskdi");
				session.createLoginSession(et.getText().toString().trim(),
						schoolSelected.trim());
				
				datasource.createComment(et.getText().toString().trim(),
						schoolSelected.trim());
				

				runOnUiThread(new Runnable() {
					public void run() {
						// ringProgressDialog.dismiss();
						// dialog.dismiss();
						Toast.makeText(LoginActivity.this, "Login Success",
								Toast.LENGTH_SHORT).show();

					}
				}); // run on ui thread terminated
				Intent intent = new Intent(LoginActivity.this,
						MainActivity.class);
				intent.setFlags(intent.getFlags()
						| Intent.FLAG_ACTIVITY_NO_HISTORY);
				LoginActivity.this.startActivity(intent);

				LoginActivity.this.finish();

			} else {
				showAlert();
			}

		} // try terminated

		catch (Exception e) {
			dialog.dismiss();
			System.out.println("Exception : " + e.getMessage());
		}

	} // void login terminated

	public void showAlert() {
		LoginActivity.this.runOnUiThread(new Runnable() {
			public void run() {
				AlertDialog.Builder builder = new AlertDialog.Builder(
						LoginActivity.this);
				builder.setTitle("Login Error.");
				builder.setMessage("Please enter correct login details")
						.setCancelable(false)
						.setPositiveButton("OK",
								new DialogInterface.OnClickListener() {
									public void onClick(DialogInterface dialog,
											int id) {
									}
								});
				AlertDialog alert = builder.create();
				alert.show();
			}
		}); // on click terminated
	}

	public void userAlert() {
		LoginActivity.this.runOnUiThread(new Runnable() {
			public void run() {
				AlertDialog.Builder builder = new AlertDialog.Builder(
						LoginActivity.this);
				builder.setTitle("Login Error.");
				builder.setMessage("Please Enter User Name")
						.setCancelable(false)
						.setPositiveButton("OK",
								new DialogInterface.OnClickListener() {
									public void onClick(DialogInterface dialog,
											int id) {
									}
								});
				AlertDialog alert = builder.create();
				alert.show();
			}
		}); // on click terminated
	}
	
	public void user_same_alert() {
		LoginActivity.this.runOnUiThread(new Runnable() {
			public void run() {
				AlertDialog.Builder builder = new AlertDialog.Builder(
						LoginActivity.this);
				builder.setTitle("Login Error.");
				builder.setMessage("User already logged in")
						.setCancelable(false)
						.setPositiveButton("OK",
								new DialogInterface.OnClickListener() {
									public void onClick(DialogInterface dialog,
											int id) {
									}
								});
				AlertDialog alert = builder.create();
				alert.show();
			}
		}); // on click terminated
	}

	public void passAlert() {
		LoginActivity.this.runOnUiThread(new Runnable() {
			public void run() {
				AlertDialog.Builder builder = new AlertDialog.Builder(
						LoginActivity.this);
				builder.setTitle("Login Error.");
				builder.setMessage("Please Enter Password")
						.setCancelable(false)
						.setPositiveButton("OK",
								new DialogInterface.OnClickListener() {
									public void onClick(DialogInterface dialog,
											int id) {
									}
								});
				AlertDialog alert = builder.create();
				alert.show();
			}
		}); // on click terminated
	}

	private class dataget extends AsyncTask<Void, Void, String> {

		@Override
		protected String doInBackground(Void... params) {
			getData();
			return null;
		}

		@Override
		protected void onPostExecute(String result) {
			// TextView txt = (TextView) findViewById(R.id.output);
			// txt.setText("Executed"); // txt.setText(result);
			// might want to change "executed" for the returned string passed
			// into onPostExecute() but that is upto you

			try {
				BufferedReader reader = new BufferedReader(
						new InputStreamReader(isr, "iso-8859-1"), 8);
				StringBuilder sb = new StringBuilder();
				String line = null;
				while ((line = reader.readLine()) != null) {
					sb.append(line + "\n");

				}
				isr.close();

				result = sb.toString();

			} catch (Exception e) {
				Log.e("log_tag", "Error coverting result " + e.toString());

			}
			try {

				JSONArray jArray = new JSONArray(result);
				schoolName = new String[jArray.length()];

				for (int i = 0; i < jArray.length(); i++) {
					JSONObject json = jArray.getJSONObject(i);
					schoolName[i] = json.getString("school_name");
				}

				for (int i = 0; i < schoolName.length; i++) {
					list1.add(schoolName[i]);

				}

			} catch (Exception e) {
				Log.e("log_tag", "Error Parsing data " + e.toString());

			}

			ArrayAdapter<String> dataAdapter1 = new ArrayAdapter<String>(
					getApplicationContext(), R.layout.spinner_item, schoolName);
			dataAdapter1.setDropDownViewResource(R.layout.spinner_item);
			spinner1.setAdapter(dataAdapter1);
			// spinner1.setPrompt("Select School");
			spinner1.setAdapter(dataAdapter1);

			spinner1.setOnItemSelectedListener(new OnItemSelectedListener() {

				@Override
				public void onItemSelected(AdapterView<?> arg0, View arg1,
						int arg2, long arg3) {
					// TODO Auto-generated method stub
					int index = arg0.getSelectedItemPosition();
					schoolSelected = schoolName[index];
					// tv.setText(schoolSelected);

				}

				@Override
				public void onNothingSelected(AdapterView<?> arg0) {
					// TODO Auto-generated method stub

				}

			});
			dialog.dismiss();
		}

		@Override
		protected void onPreExecute() {
			dialog = ProgressDialog.show(LoginActivity.this, "",
					"Please Wait..", true);

		}

		@Override
		protected void onProgressUpdate(Void... values) {
		}

	}

	public void getData() {

		try {
			httpclient = new DefaultHttpClient();
			httppost = new HttpPost(
					"http://npaneer.iguardianerp.co.in/school.php");
			HttpResponse response = httpclient.execute(httppost);
			HttpEntity entity = response.getEntity();
			isr = entity.getContent();

		} catch (Exception e) {
			Log.e("log_tag", "Error in http connection" + e.toString());
			InternetAlert();

		}

	}
	public void InternetAlert() {
		this.runOnUiThread(new Runnable() {
			public void run() {
				AlertDialog.Builder builder = new AlertDialog.Builder(
						LoginActivity.this);
				builder.setTitle("Connection Error");
				builder.setMessage("Check Internet Connection")
						.setCancelable(false)
						.setPositiveButton("OK",
								new DialogInterface.OnClickListener() {
									public void onClick(DialogInterface dialog,
											int id) {
									}
								});
				AlertDialog alert = builder.create();
				alert.show();
			}
		}); // on click terminated
	}//

}

// LoginActivity terminated
