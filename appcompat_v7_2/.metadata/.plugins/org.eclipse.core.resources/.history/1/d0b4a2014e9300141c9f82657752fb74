package com.litchi.iguardian;

import java.io.InputStream;

import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;

//import com.litchi.iguardian.ComposeMessage.Composesend;

import android.app.AlertDialog;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.res.Configuration;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.PowerManager;
import android.support.v7.app.ActionBarActivity;
import android.util.Log;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewConfiguration;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.TextView;

//import android.support.v7.appcompat.R;

public class AssignmentView extends ActionBarActivity {

	TextView assignment_subject, assignment_date, assignment_view;
	EditText reply;
	ProgressDialog Dialog;
	Button download_button;
	Context context;
	String assignment,assignment_link, date, subject, username, school;
	ListView assignments;

	HttpPost httppost;
	StringBuffer buffer;
	HttpResponse response;
	HttpClient httpclient;
	List<NameValuePair> nameValuePairs;
	ProgressDialog dialog = null;
	String[] assign;

	SessionManagement session;

	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_assignment_view);
		context = getApplicationContext();
		// getActionBar().setTitle("Compose Message");

		session = new SessionManagement(getApplicationContext());

		HashMap<String, String> user = session.getUserDetails();
		username = user.get(SessionManagement.KEY_NAME);
		school = user.get(SessionManagement.KEY_SCHOOL);
		// session = new SessionManagement(getApplicationContext());

		Intent intent = getIntent();
		subject = intent.getStringExtra("subject");
		date = intent.getStringExtra("date");
		assignment = intent.getStringExtra("assignment");
		assignment_link = intent.getStringExtra("assignment_link");
		//message_id = intent.getStringExtra("message_id");

		assignment_subject = (TextView) findViewById(R.id.assignment_subject);
		assignment_date = (TextView) findViewById(R.id.message_subject);
		assignment_view = (TextView) findViewById(R.id.date);
		//assignment_ = (TextView) findViewById(R.id.name);
		//reply = (EditText) findViewById(R.id.reply_message);
		download_button = (Button) findViewById(R.id.download);

		assignment_subject.setText("" + subject + "");
		assignment_date.setText("" + date + "");
		assignment_view.setText("" + assignment + "");
		//mes.setText(message);
		getOverflowMenu();

		download_button.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {

				
					//new Inboxsend().execute();
				
			}
		}); // b.setOnClickLi

	}

	private void getOverflowMenu() {

		try {
			ViewConfiguration config = ViewConfiguration.get(this);
			Field menuKeyField = ViewConfiguration.class
					.getDeclaredField("sHasPermanentMenuKey");
			if (menuKeyField != null) {
				menuKeyField.setAccessible(true);
				menuKeyField.setBoolean(config, false);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu items for use in the action bar
		MenuInflater inflater = getMenuInflater();
		inflater.inflate(R.menu.main_activity_actions, menu);
		return super.onCreateOptionsMenu(menu);
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// TODO Auto-generated method stub
		/*
		 * if(drawerListener.onOptionsItemSelected(item)) { return true; }
		 */

		int itemId = item.getItemId();
		if (itemId == R.id.action_logout) {
			session.logoutUser();
			AssignmentView.this.finish();
			return true;
		}

		return super.onOptionsItemSelected(item);

	}

	@Override
	public void onConfigurationChanged(Configuration newConfig) {
		// TODO Auto-generated method stub
		super.onConfigurationChanged(newConfig);
		// drawerListener.onConfigurationChanged(newConfig);
	}

	@Override
	protected void onPostCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onPostCreate(savedInstanceState);
		// drawerListener.syncState();
	}

	

	
	

}
