package com.litchi.iguardian;

import java.util.HashMap;
import java.util.List;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.database.sqlite.SQLiteDatabase;
import android.util.Log;

public class SessionManagement {
	// Shared Preferences
	SharedPreferences pref;
	// private MySQLiteHelper delete_helper ;

	private UserDataSource datasource;

	// Editor for Shared preferences
	Editor editor;
	
	Editor editor2;

	// Context
	Context _context;

	// Shared pref mode
	int PRIVATE_MODE = 0;

	// Sharedpref file name
	private static final String PREF_NAME = "iguardian";

	// All Shared Preferences Keys
	private static final String IS_LOGIN = "IsLoggedIn";

	// User name (make variable public to access from outside)
	public static final String KEY_NAME = "name";

	// Email address (make variable public to access from outside)
	//public static final String KEY_SCHOOL = "school";
	
	public static final String KEY_DB = "DB";
	
	public static final String REG_ID = "ID";

	// Constructor
	public SessionManagement(Context context) {
		this._context = context;
		pref = _context.getSharedPreferences(PREF_NAME, PRIVATE_MODE);
		editor = pref.edit();
		editor2 = pref.edit();
		datasource = new UserDataSource(context);
		// datasource.open();
	}

	/**
	 * Create login session
	 * */
	public void createLoginSession(String username, String db) {
		// Storing login value as TRUE
		editor.putBoolean(IS_LOGIN, true);

		// Storing name in pref
		editor.putString(KEY_NAME, username);

		// Storing email in pref
		//editor.putString(KEY_SCHOOL, school);
		
		editor.putString(KEY_DB, db);

		// commit changes
		editor.commit();
	}
	
	public void register_id(String reg_id) {
		// Storing login value as TRUE
		//editor.putBoolean(IS_LOGIN, true);

		// Storing name in pref
		//editor.putString(KEY_NAME, username);

		// Storing email in pref
		//editor.putString(KEY_SCHOOL, school);
		
		editor2.putString(REG_ID, reg_id);

		// commit changes
		editor2.commit();
	}


	

	/**
	 * Check login method wil check user login status If false it will redirect
	 * user to login page Else won't do anything
	 * */
	public int checkLogin() {
		Log.i("Value of ", "check");
		// Check login status
		if (!this.isLoggedIn()) {

			// ((Activity)_context).finish();
			/*
			 * Intent i = new Intent(_context, LoginActivity.class);
			 * 
			 * i.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
			 * 
			 * 
			 * // Add new Flag to start new Activity
			 * i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
			 * 
			 * 
			 * // Staring Login Activity _context.startActivity(i);
			 */
			// ((Activity)_context).finish();
			// _context.startActivityForResult(i, requestCode);

			return 1;
		}
		return 0;
	}

	/**
	 * Get stored session data
	 * */
	public HashMap<String, String> getUserDetails() {
		HashMap<String, String> user = new HashMap<String, String>();
		// user name
		user.put(KEY_NAME, pref.getString(KEY_NAME, null));

		// user email id
		//user.put(KEY_SCHOOL, pref.getString(KEY_SCHOOL, null));
		user.put(KEY_DB, pref.getString(KEY_DB, null));

		// return user
		return user;
	}

	/**
	 * Clear session details
	 * */
	public void logoutUser() {
		// Clearing all data from Shared Preferences
		editor.clear();
		editor.commit();
		// editor.putBoolean(IS_LOGIN, false);
		// editor.commit();
		// delete_helper.onUpgrade(db_name.database,
		// delete_helper.DATABASE_VERSION, delete_helper.DATABASE_VERSION+1);
		// datasource = new UserDataSource(this);
		// datasource.open();
		// SQLiteDatabase db = delete_helper.getWritableDatabase();
		/*
		 * SQLiteDatabase db = datasource.database ;
		 * db.delete(MySQLiteHelper.user_table,null,null);
		 * db.execSQL("delete from"+ MySQLiteHelper.user_table);
		 * db.execSQL("TRUNCATE table" + MySQLiteHelper.user_table); db.close();
		 * 
		 * 
		 *
		 */
		
		//datasource = new UserDataSource(this);
		//datasource.open();

		// List<UserTable> values = datasource.getAllComments();
		//List<String> school = datasource.get_school_db();
		
		//datasource.close();
		
		datasource.open();
		List<String> user_name = datasource.get_user_name();
		datasource.deletetable();
		datasource.close();
		// After logout redirect user to Loing Activity
		Intent i = new Intent(_context, LoginActivity.class);
		// Closing all the Activities
		// i.setFlags(i.getFlags() | Intent.FLAG_ACTIVITY_NO_HISTORY);
		i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);

		// Add new Flag to start new Activity
		i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
		// i.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
		// i.putExtra("EXIT", true);
		// Staring Login Activity
		_context.startActivity(i);

	}

	/**
	 * Quick check for login
	 * **/
	// Get Login State
	public boolean isLoggedIn() {
		return pref.getBoolean(IS_LOGIN, false);
	}
}
