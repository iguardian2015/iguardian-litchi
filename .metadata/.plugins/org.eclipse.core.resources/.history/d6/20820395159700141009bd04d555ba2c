package com.litchi.iguardian;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashMap;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONArray;
import org.json.JSONObject;

import android.accounts.Account;
import android.accounts.AccountManager;
import android.app.Activity;
import android.app.ProgressDialog;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.widget.SimpleAdapter;
import android.widget.TextView;

import com.google.android.gcm.GCMRegistrar;

public class DemoActivity extends Activity {

	 private String TAG = "** pushAndroidActivity **";
	 ProgressDialog dialog ;
	 private TextView mDisplay;

	 TextView RuA,paC,DEF;
	 TextView Defense_Tackles[];
	 
	    AsyncTask<Void, Void, Void> mRegisterTask;

	    @Override
	    public void onCreate(Bundle savedInstanceState) {
	        super.onCreate(savedInstanceState);
	        //checkNotNull(SERVER_URL, "SERVER_URL");
	        checkNotNull(CommonUtilities.SENDER_ID, "SENDER_ID");
	        // Make sure the device has the proper dependencies.
	        GCMRegistrar.checkDevice(this);
	        // Make sure the manifest was properly set - comment out this line
	        // while developing the app, then uncomment it when it's ready.
	        GCMRegistrar.checkManifest(this);
	        setContentView(R.layout.activity_demo);
	        mDisplay = (TextView) findViewById(R.id.display);
	        registerReceiver(mHandleMessageReceiver,
	                new IntentFilter(CommonUtilities.DISPLAY_MESSAGE_ACTION));
	        final String regId = GCMRegistrar.getRegistrationId(this);
	        if (regId.equals("")) {
	            // Automatically registers application on startup.
	            GCMRegistrar.register(this, CommonUtilities.SENDER_ID);
	        } else {
	        	Log.i("Already Registered :", regId);
	           
	            
	        }
	        
	        
	        String accountName = getAccount();

	     // Initialize the scope using the client ID you got from the Console.
	     final String scope = "audience:server:client_id:"
	             + "1262xxx48712-9qs6n32447mcj9dirtnkyrejt82saa52.apps.googleusercontent.com";
	     String id_token = null;
	     try {
	         id_token = GoogleAuthUtil.getToken(context, accountName, scope);
	     } catch (Exception e) {
	        Log.i("eoor", "eoor");
	     }
	        
	        
	        
	    }

	    @Override
	    public boolean onCreateOptionsMenu(Menu menu) {
	        MenuInflater inflater = getMenuInflater();
	        inflater.inflate(R.menu.options_menu, menu);
	        return true;
	    }

	    @Override
	    public boolean onOptionsItemSelected(MenuItem item) {
	        switch(item.getItemId()) {
	           
	            case R.id.options_clear:
	                mDisplay.setText(null);
	                return true;
	            case R.id.options_exit:
	                finish();
	                return true;
	            default:
	                return super.onOptionsItemSelected(item);
	        }
	    }
	    
	   
	    
	    
	    
	    

	    @Override
	    protected void onDestroy() {
	        if (mRegisterTask != null) {
	            mRegisterTask.cancel(true);
	        }
	        unregisterReceiver(mHandleMessageReceiver);
	        GCMRegistrar.onDestroy(getApplicationContext());
	        super.onDestroy();
	    }

	    private void checkNotNull(Object reference, String name) {
	        if (reference == null) {
	            throw new NullPointerException(
	                    getString(R.string.error_config, name));
	        }
	    }

	    private final BroadcastReceiver mHandleMessageReceiver =
	            new BroadcastReceiver() {
	        @Override
	        public void onReceive(Context context, Intent intent) {
	            String newMessage = intent.getExtras().getString(CommonUtilities.EXTRA_MESSAGE);
	            mDisplay.append(newMessage + "\n");
	        }
	    };
	    
	    public String getAccount() {
	        Account[] accounts = AccountManager.get(getApplicationContext()).
	            getAccountsByType("com.google");
	        if (accounts.length == 0) {
	            return null;
	        }
	        return accounts[0].name;
	    }
}

