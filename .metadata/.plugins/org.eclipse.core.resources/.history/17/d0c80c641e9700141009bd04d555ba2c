package com.litchi.iguardian;

import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.widget.TextView;

import com.google.android.gcm.GCMRegistrar;

public class DemoActivity extends Activity {

	 private String TAG = "** pushAndroidActivity **";
	 String reg_id;
	 private TextView mDisplay;

	 TextView RuA,paC,DEF;
	 TextView Defense_Tackles[];
	 
	    AsyncTask<Void, Void, Void> mRegisterTask;

	    @Override
	    public void onCreate(Bundle savedInstanceState) {
	        super.onCreate(savedInstanceState);
	        //checkNotNull(SERVER_URL, "SERVER_URL");
	        checkNotNull(CommonUtilities.SENDER_ID, "SENDER_ID");
	        // Make sure the device has the proper dependencies.
	        GCMRegistrar.checkDevice(this);
	        // Make sure the manifest was properly set - comment out this line
	        // while developing the app, then uncomment it when it's ready.
	        GCMRegistrar.checkManifest(this);
	        setContentView(R.layout.activity_demo);
	        mDisplay = (TextView) findViewById(R.id.display);
	        registerReceiver(mHandleMessageReceiver,
	                new IntentFilter(CommonUtilities.DISPLAY_MESSAGE_ACTION));
	         String regId = GCMRegistrar.getRegistrationId(this);
	        if(!regId.equals(""))
	        {
	        	Log.i("REg_id = ", regId);
	        	mDisplay.setText("ok registered at: " + regId);
	        }
	        
	        
	        if (regId.equals("")) {
	            // Automatically registers application on startup.
	            GCMRegistrar.register(this, CommonUtilities.SENDER_ID);
	            //GCMIntentService reg = new GCMIntentService();
	            //regId = GCMRegistrar.getRegistrationId(this);
	            //mDisplay.setText("okk registered at: " + reg_id ) ;
	            registerReceiver(mHandleMessageReceiver,
		                new IntentFilter(CommonUtilities.DISPLAY_MESSAGE_ACTION));
		         String regIds = GCMRegistrar.getRegistrationId(this);
		         mDisplay.setText("okka registered at: " + regIds ) ;
	            
	        } else {
	        	Log.i("Already Registered :", regId);
	            
	            
	        }
	    }
	    
	    
	    
	    
	    
	    
	    

	    @Override
	    public boolean onCreateOptionsMenu(Menu menu) {
	        MenuInflater inflater = getMenuInflater();
	        inflater.inflate(R.menu.options_menu, menu);
	        return true;
	    }

	    @Override
	    public boolean onOptionsItemSelected(MenuItem item) {
	        switch(item.getItemId()) {
	            /*
	             * Typically, an application registers automatically, so options
	             * below are disabled. Uncomment them if you want to manually
	             * register or unregister the device (you will also need to
	             * uncomment the equivalent options on options_menu.xml).
	             */
	            /*
	            case R.id.options_register:
	                GCMRegistrar.register(this, SENDER_ID);
	                return true;
	            case R.id.options_unregister:
	                GCMRegistrar.unregister(this);
	                return true;
	             */
	            case R.id.options_clear:
	                mDisplay.setText(null);
	                return true;
	            case R.id.options_exit:
	                finish();
	                return true;
	            default:
	                return super.onOptionsItemSelected(item);
	        }
	    }

	    @Override
	    protected void onDestroy() {
	        if (mRegisterTask != null) {
	            mRegisterTask.cancel(true);
	        }
	        unregisterReceiver(mHandleMessageReceiver);
	        GCMRegistrar.onDestroy(getApplicationContext());
	        super.onDestroy();
	    }

	    private void checkNotNull(Object reference, String name) {
	        if (reference == null) {
	            throw new NullPointerException(
	                    getString(R.string.error_config, name));
	        }
	    }

	    private final BroadcastReceiver mHandleMessageReceiver =
	            new BroadcastReceiver() {
	        @Override
	        public void onReceive(Context context, Intent intent) {
	            String newMessage = intent.getExtras().getString(CommonUtilities.EXTRA_MESSAGE);
	            //mDisplay.append(newMessage + "\n");
	            Log.i("REg_id = ", newMessage);
	            //mDisplay.setText("okk registered at: " + reg_id ) ;
	        }
	    };
}

